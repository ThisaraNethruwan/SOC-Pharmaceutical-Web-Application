//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPC_Pharmacy.PlaceOrderServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlaceOrderServiceReference.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductById(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductByIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceNewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int PlaceNewOrder(int productId, int quantity, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceNewOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PlaceNewOrderAsync(int productId, int quantity, int customerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : SPC_Pharmacy.PlaceOrderServiceReference.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<SPC_Pharmacy.PlaceOrderServiceReference.WebService1Soap>, SPC_Pharmacy.PlaceOrderServiceReference.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Data.DataSet GetProductById(int productId) {
            return base.Channel.GetProductById(productId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductByIdAsync(int productId) {
            return base.Channel.GetProductByIdAsync(productId);
        }
        
        public int PlaceNewOrder(int productId, int quantity, int customerId) {
            return base.Channel.PlaceNewOrder(productId, quantity, customerId);
        }
        
        public System.Threading.Tasks.Task<int> PlaceNewOrderAsync(int productId, int quantity, int customerId) {
            return base.Channel.PlaceNewOrderAsync(productId, quantity, customerId);
        }
    }
}
